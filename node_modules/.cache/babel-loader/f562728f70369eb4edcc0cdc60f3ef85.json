{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigorubio/Desktop/Tarea3/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport io from 'socket.io-client'; //import MapView from './components/MapView';\n\nimport { useState, useEffect } from 'react';\nimport socket from './components/Socket';\nimport Chat from './components/Chat'; // imports de MapView.js y Markers.js\n\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Airplanes } from './components/Airplanes'; //const io = require('socket.io-client')\n//const socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n//    path: \"/flights\"\n//});\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const info_vuelos = []; // aca van los useState\n\n  const [positions, setPositions] = useState([]);\n  const [flights, setFlights] = useState([]);\n  const [aux, setAux] = useState(\"\");\n  const pos_actual = positions;\n  const [name, setName] = useState(\"\");\n  const [registered, setRegistered] = useState(false);\n\n  const register = e => {\n    e.preventDefault();\n\n    if (name !== \"\") {\n      setRegistered(true);\n    }\n  }; //const polyline = [\n  //  [51.52437, 13.7888],\n  //  [40.51, 13.41053],\n  //];\n\n\n  useEffect(() => {\n    //console.log('emitiendo un vuelo');\n    socket.emit('FLIGHTS'); //console.log('vuelo emitido');\n  }, []);\n  useEffect(() => {\n    socket.on('POSITION', vuelo => {\n      //console.log('nuevas posiciones de vuelos');\n      //const pos_actual = positions;\n      pos_actual[vuelo.code] = vuelo;\n      setPositions(pos_actual); //console.log(positions)\n      //console.log(pos_actual);\n\n      setAux(vuelo);\n    });\n    socket.on('FLIGHTS', function (data) {\n      //console.log('info del vuelo');\n      //console.log(data);\n      //console.log('fin info del vuelo');\n      info_vuelos.push(data);\n      setFlights(info_vuelos[0]); //console.log('print flights');\n      //console.log(flights);\n      //console.log('fin print flights');\n      //Object.values(flights).map((airp) => (\n      //  console.log([airp.origin, airp.destination])\n      //))\n    });\n  }, [aux]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: {\n        lat: '-33.57833835625107',\n        lng: '-66.63795402257144'\n      },\n      zoom: 4,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), Object.values(positions).map(item => /*#__PURE__*/_jsxDEV(Marker, {\n        position: item.position,\n        icon: Airplanes,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: item.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), Object.values(flights).map(info => /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [info.origin, info.destination],\n        color: 'red'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), !registered && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: register,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Introduzca su nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), registered && /*#__PURE__*/_jsxDEV(Chat, {\n      nombre: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), Object.values(flights).map(info => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Airline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), \": \", info.airline]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), \": \", info.code]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), \": \", info.plane]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), \": \", info.origin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), \": \", info.destination]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), \": \", info.seats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Chat, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"P0HB2+tB7KbtrWN1A0s9ZtRpLyM=\");\n\n_c = App;\n;\nexport default App;\n/*\n<Polyline positions={polyline}></Polyline>\n\n{Object.values(flights).map((info) => (\n  <Polyline position={[info.origin, info.destination]} color={'red'}></Polyline>\n))}\n\n{flights.map((info) => (\n    <Polyline position={[info.origin, info.destination]} color={'red'}></Polyline>\n))}\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rodrigorubio/Desktop/Tarea3/my-app/src/App.js"],"names":["React","io","useState","useEffect","socket","Chat","Map","TileLayer","Marker","Popup","Polyline","Airplanes","App","info_vuelos","positions","setPositions","flights","setFlights","aux","setAux","pos_actual","name","setName","registered","setRegistered","register","e","preventDefault","emit","on","vuelo","code","data","push","lat","lng","Object","values","map","item","position","info","origin","destination","target","value","airline","plane","seats"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react'\nimport io from 'socket.io-client';\n//import MapView from './components/MapView';\nimport { useState, useEffect } from 'react';\nimport socket from './components/Socket';\nimport Chat from './components/Chat';\n\n// imports de MapView.js y Markers.js\nimport { Map, TileLayer, Marker, Popup, Polyline} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css'\nimport {Airplanes} from './components/Airplanes'\n\n//const io = require('socket.io-client')\n//const socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n//    path: \"/flights\"\n//});\n\nfunction App() {\n\n  const info_vuelos = [];\n  // aca van los useState\n  const [positions, setPositions] = useState([]);\n  const [flights, setFlights] = useState([]);\n  const [aux, setAux] = useState(\"\");\n\n  const pos_actual = positions;\n\n  const [name, setName] = useState(\"\");\n  const [registered, setRegistered] = useState(false);\n\n  const register = (e) => {\n    e.preventDefault();\n    if(name !== \"\"){\n      setRegistered(true)\n    }\n  }\n  \n  //const polyline = [\n  //  [51.52437, 13.7888],\n  //  [40.51, 13.41053],\n  //];\n\n  useEffect(() => {\n    //console.log('emitiendo un vuelo');\n    socket.emit('FLIGHTS');\n    //console.log('vuelo emitido');\n  }, [] );\n\n  useEffect(() => {\n    socket.on('POSITION', vuelo => {\n      //console.log('nuevas posiciones de vuelos');\n      //const pos_actual = positions;\n      pos_actual[vuelo.code] = vuelo;\n      setPositions(pos_actual);\n      //console.log(positions)\n      //console.log(pos_actual);\n      setAux(vuelo)\n    });\n\n    socket.on('FLIGHTS', function(data){\n      //console.log('info del vuelo');\n      //console.log(data);\n      //console.log('fin info del vuelo');\n\n      info_vuelos.push(data);\n      setFlights(info_vuelos[0]);\n\n      //console.log('print flights');\n      //console.log(flights);\n      //console.log('fin print flights');\n      \n      //Object.values(flights).map((airp) => (\n      //  console.log([airp.origin, airp.destination])\n      //))\n    });\n\n  }, [aux] );\n\n\n  return(\n    <div>\n\n    <Map center={{lat: '-33.57833835625107', lng: '-66.63795402257144'}} zoom={4}>\n      <TileLayer \n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {Object.values(positions).map((item) => (\n          <Marker position={item.position} icon={Airplanes}>\n              <Popup>\n                  {item.code}\n              </Popup>\n          </Marker>\n      ))}\n      {Object.values(flights).map((info) => (\n          <Polyline positions={[info.origin, info.destination]} color={'red'}>\n\n          </Polyline>\n      ))}\n    </Map>\n\n      {\n        !registered &&\n\n        <form onSubmit={register}>\n          <label htmlFor=\"\">Introduzca su nombre</label>\n          <input value={name} onChange={e => setName(e.target.value)}/>\n          <button>Ingresar</button>\n        </form>\n      }\n\n      {\n        registered &&\n        <Chat nombre={name}></Chat>\n      }\n\n      {Object.values(flights).map((info) => (\n        <ul>\n          <li><b>Airline</b>: {info.airline}</li>\n          <li><b>Code</b>: {info.code}</li>\n          <li><b>Plane</b>: {info.plane}</li>\n          <li><b>Origin</b>: {info.origin}</li>\n          <li><b>Destination</b>: {info.destination}</li>\n          <li><b>Seats</b>: {info.seats}</li>\n        </ul>\n      ))}\n      <Chat name={name}/>\n    \n    </div>\n  );\n\n};\n\nexport default App;\n\n/*\n<Polyline positions={polyline}></Polyline>\n\n{Object.values(flights).map((info) => (\n  <Polyline position={[info.origin, info.destination]} color={'red'}></Polyline>\n))}\n\n{flights.map((info) => (\n    <Polyline position={[info.origin, info.destination]} color={'red'}></Polyline>\n))}\n*/"]},"metadata":{},"sourceType":"module"}