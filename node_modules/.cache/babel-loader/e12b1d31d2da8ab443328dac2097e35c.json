{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigorubio/Desktop/Tarea3/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport io from 'socket.io-client'; //import MapView from './components/MapView';\n\nimport { useState, useEffect } from 'react';\n/* import socket from './components/Socket'; */\n// imports de MapView.js y Markers.js\n\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Airplanes } from './components/Airplanes'; //const io = require('socket.io-client')\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n  path: \"/flights\"\n});\n\nfunction App() {\n  _s();\n\n  // aca van los useState\n  const [positions, setPositions] = useState([]); //const [message, setMessage] = useState([]);\n  //const [messages, setMessages] = useState();\n\n  const [flights, setFlights] = useState([]);\n  const [aux, setAux] = useState(\"\");\n  const pos_actual = positions;\n  const info_vuelos = [];\n  const polyline = [[51.52437, 13.7888], [40.51, 13.41053]]; // aca van los useEffect\n  //socket.on('POSITION', function(data){\n  //  console.log(data);\n  //});\n  //socket.on('FLIGHTS', function(data){\n  //  console.log(\"Imprimiendo info de flights\");\n  //  console.log(data);\n  //  console.log(\"Fin info de flights\");\n  //});\n  //socket.on('CHAT');\n\n  useEffect(() => {\n    console.log('emitiendo un vuelo');\n    socket.emit('FLIGHTS');\n    console.log('vuelo emitido');\n  }, []);\n  useEffect(() => {\n    socket.on('POSITION', vuelo => {\n      console.log('nuevas posiciones de vuelos'); //const pos_actual = positions;\n\n      pos_actual[vuelo.code] = vuelo;\n      setPositions(pos_actual); //console.log(positions)\n\n      console.log(pos_actual);\n      setAux(vuelo);\n    });\n    socket.on('FLIGHTS', info => {\n      console.log('info del vuelo');\n      info_vuelos.push(info); //console.log(info);\n      //console.log('fin info del vuelo');\n      //const info_vuelos = flights;\n      //info_vuelos[info.code] = info;\n\n      setFlights(info);\n      console.log(flights);\n    });\n  }, [aux]); // aca van las funciones\n  //socket.emit('CHAT');\n  //socket.emit('FLIGHTS');\n  //const handleNewMessage = () => {\n  //  console.log('emitiendo mensaje al chat');\n  //  socket.emit('CHAT');\n  //}\n\n  /*\n    return(\n      <MapView/>\n    );\n  */\n\n  return /*#__PURE__*/_jsxDEV(Map, {\n    center: {\n      lat: '51.52437',\n      lng: '13.41053'\n    },\n    zoom: 2,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), Object.values(positions).map(item => /*#__PURE__*/_jsxDEV(Marker, {\n      position: item.position,\n      icon: Airplanes,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: item.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: polyline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), Object.values(flights).map(info => /*#__PURE__*/_jsxDEV(Polyline, {\n      position: [info.origin, info.destination]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tVv40kHtSuGDDayEPmdIWnul/i0=\");\n\n_c = App;\n;\nexport default App;\n/*\n{Object.values(flights).map((info) => (\n  <Polyline position={[info.origin, info.destination]} color={'red'}></Polyline>\n))}\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rodrigorubio/Desktop/Tarea3/my-app/src/App.js"],"names":["React","io","useState","useEffect","Map","TileLayer","Marker","Popup","Polyline","Airplanes","socket","path","App","positions","setPositions","flights","setFlights","aux","setAux","pos_actual","info_vuelos","polyline","console","log","emit","on","vuelo","code","info","push","lat","lng","Object","values","map","item","position","origin","destination"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react'\nimport io from 'socket.io-client';\n//import MapView from './components/MapView';\nimport { useState, useEffect } from 'react';\n/* import socket from './components/Socket'; */\n\n// imports de MapView.js y Markers.js\nimport { Map, TileLayer, Marker, Popup, Polyline} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css'\nimport {Airplanes} from './components/Airplanes'\n\n//const io = require('socket.io-client')\nconst socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path: \"/flights\"\n});\n\nfunction App() {\n\n  // aca van los useState\n  const [positions, setPositions] = useState([]);\n  //const [message, setMessage] = useState([]);\n  //const [messages, setMessages] = useState();\n  const [flights, setFlights] = useState([]);\n  const [aux, setAux] = useState(\"\");\n  const pos_actual = positions;\n  const info_vuelos = [];\n  const polyline = [\n    [51.52437, 13.7888],\n    [40.51, 13.41053],\n  ];\n\n\n  // aca van los useEffect\n  //socket.on('POSITION', function(data){\n  //  console.log(data);\n  //});\n\n  //socket.on('FLIGHTS', function(data){\n  //  console.log(\"Imprimiendo info de flights\");\n  //  console.log(data);\n  //  console.log(\"Fin info de flights\");\n  //});\n\n  //socket.on('CHAT');\n\n  useEffect(() => {\n    console.log('emitiendo un vuelo');\n    socket.emit('FLIGHTS');\n    console.log('vuelo emitido');\n  }, [] );\n\n  useEffect(() => {\n    socket.on('POSITION', vuelo => {\n      console.log('nuevas posiciones de vuelos');\n      //const pos_actual = positions;\n      pos_actual[vuelo.code] = vuelo;\n      setPositions(pos_actual);\n      //console.log(positions)\n      console.log(pos_actual);\n      setAux(vuelo)\n    });\n\n    socket.on('FLIGHTS', info => {\n      console.log('info del vuelo');\n      info_vuelos.push(info)\n      //console.log(info);\n      //console.log('fin info del vuelo');\n      //const info_vuelos = flights;\n      //info_vuelos[info.code] = info;\n      setFlights(info);\n      console.log(flights);\n    });\n\n  }, [aux] );\n\n\n  // aca van las funciones\n  //socket.emit('CHAT');\n  //socket.emit('FLIGHTS');\n\n  //const handleNewMessage = () => {\n  //  console.log('emitiendo mensaje al chat');\n  //  socket.emit('CHAT');\n  //}\n\n/*\n  return(\n    <MapView/>\n  );\n*/\n\n  return(\n    <Map center={{lat: '51.52437', lng: '13.41053'}} zoom={2}>\n      <TileLayer \n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {Object.values(positions).map((item) => (\n          <Marker position={item.position} icon={Airplanes}>\n              <Popup>\n                  {item.code}\n              </Popup>\n          </Marker>\n      ))}\n      <Polyline positions={polyline}></Polyline>\n      {Object.values(flights).map((info) => (\n          <Polyline position={[info.origin, info.destination]} ></Polyline>\n      ))}\n    </Map>\n  );\n\n};\n\nexport default App;\n\n/*\n{Object.values(flights).map((info) => (\n  <Polyline position={[info.origin, info.destination]} color={'red'}></Polyline>\n))}\n*/"]},"metadata":{},"sourceType":"module"}